class Solution {
public:
    int divide(long dividend, long divisor) {
        if (dividend == divisor) return 1;
        bool sign = true;
        if (dividend < 0 && divisor > 0) sign = false;
        if (dividend > 0 && divisor < 0) sign = false;

        long ans = 0;
        long n = labs(dividend);  
        long d = labs(divisor);

        while (n >= d)   
        {
            long cnt = 0;
            while (n >= (d * (1L << (cnt+1)))) {
                cnt++;
            }
            ans += (1L << cnt);   
            n -= (d * (1L << cnt));
        }

        if (ans >= INT_MAX && sign == true) {
            return INT_MAX;
        }
        if (ans >= (long)INT_MAX + 1 && sign == false) {  
            return INT_MIN;
        }

        return sign ? ans : -ans;
    }
};
